#!/usr/bin/env node
var fs = require('fs');
var path = require('path');
var XmlParser = require('xml2json');
var blogentry = require('./blogentry');

function generateBlogEntries() {
    var dependencies = getDependencies();
    var blogFilesDirectory = dependencies.blogFilesDirectory;
    var blogEntriesFile = dependencies.blogEntriesFile;

    var blogEntries = [];
    var files = fs.readdirSync(blogFilesDirectory);
 
    files.forEach(function (fileName, index) {
        var filePath = blogFilesDirectory + '/' + fileName;
        var content = fs.readFileSync(filePath, 'utf8').toString();
        var blogMeta = JSON.parse(XmlParser.toJson(content)).div.meta;
        
        blogEntries.push(blogentry.create(fileName, blogMeta.title, blogMeta.summary));
    });

    var blogEntriesFileContent = generateBlogEntriesFileContent(blogEntries);

    fs.writeFile(blogEntriesFile, blogEntriesFileContent, (err) => {
        if (err) throw err;
        console.log('The file has been saved!');
    });
}

function generateBlogEntriesFileContent(blogEntries) {
    var fileContent = 
        "// This file is auto-generated by the process-blogs node module.\n" +
        "// Modify blog files and rebuild to modify this file.\n" +
        "import { BlogEntry } from '../models/blogentry';\n\n" +
        "export const BLOGENTRIES: BlogEntry[] = [\n";

    blogEntries.forEach(function (blogEntry, index) {
        fileContent += '\t' + blogentry.toString(blogEntry);

        if (index < blogEntries.length - 1) {
            fileContent += ',\n';
        } else {
            fileContent += '\n';
        }
    });

    fileContent += '];'
    
    return fileContent;
}

function getDependencies() {
    var root = process.cwd();
    var blogFilesDirectory = root + '/src/blogs';
    var blogEntriesFile = root + '/src/app/data/blogentries.ts';

    if (!fs.existsSync(blogFilesDirectory)) {
        throw "Cannot find dependency: " +  blogFilesDirectory + 
            "\nPlease make sure you are executing commands from the project root!";
    }

    if (!fs.existsSync(blogEntriesFile)) {
        throw "Cannot find dependency: " +  blogEntriesFile + 
            "\nPlease make sure you are executing commands from the project root!";
    }

    return {
        blogFilesDirectory: blogFilesDirectory,
        blogEntriesFile: blogEntriesFile
    }
}

generateBlogEntries();